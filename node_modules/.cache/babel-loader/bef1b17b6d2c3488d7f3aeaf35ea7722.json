{"ast":null,"code":"var Mexp = require('./postfix.js');\n\nMexp.prototype.postfixEval = function (UserDefined) {\n  'use strict';\n\n  UserDefined = UserDefined || {};\n  UserDefined.PI = Math.PI;\n  UserDefined.E = Math.E;\n  var stack = [],\n      pop1,\n      pop2,\n      pop3;\n  var disp = [];\n  var temp = '';\n  var arr = this.value;\n  var bool = typeof UserDefined.n !== 'undefined';\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i].type === 1) {\n      stack.push({\n        value: arr[i].value,\n        type: 1\n      });\n    } else if (arr[i].type === 3) {\n      stack.push({\n        value: UserDefined[arr[i].value],\n        type: 1\n      });\n    } else if (arr[i].type === 0) {\n      if (typeof stack[stack.length - 1].type === 'undefined') {\n        stack[stack.length - 1].value.push(arr[i]);\n      } else stack[stack.length - 1].value = arr[i].value(stack[stack.length - 1].value);\n    } else if (arr[i].type === 7) {\n      if (typeof stack[stack.length - 1].type === 'undefined') {\n        stack[stack.length - 1].value.push(arr[i]);\n      } else stack[stack.length - 1].value = arr[i].value(stack[stack.length - 1].value);\n    } else if (arr[i].type === 8) {\n      var popped = [];\n\n      for (var x = 0; x < arr[i].numberOfArguments; x++) {\n        popped.push(stack.pop().value);\n      }\n\n      stack.push({\n        type: 1,\n        value: arr[i].value.apply(arr[i], popped.reverse())\n      });\n    } else if (arr[i].type === 10) {\n      pop1 = stack.pop();\n      pop2 = stack.pop();\n\n      if (typeof pop2.type === 'undefined') {\n        pop2.value = pop2.concat(pop1);\n        pop2.value.push(arr[i]);\n        stack.push(pop2);\n      } else if (typeof pop1.type === 'undefined') {\n        pop1.unshift(pop2);\n        pop1.push(arr[i]);\n        stack.push(pop1);\n      } else {\n        stack.push({\n          type: 1,\n          value: arr[i].value(pop2.value, pop1.value)\n        });\n      }\n    } else if (arr[i].type === 2 || arr[i].type === 9) {\n      pop1 = stack.pop();\n      pop2 = stack.pop();\n\n      if (typeof pop2.type === 'undefined') {\n        pop2 = pop2.concat(pop1);\n        pop2.push(arr[i]);\n        stack.push(pop2);\n      } else if (typeof pop1.type === 'undefined') {\n        pop1.unshift(pop2);\n        pop1.push(arr[i]);\n        stack.push(pop1);\n      } else {\n        stack.push({\n          type: 1,\n          value: arr[i].value(pop2.value, pop1.value)\n        });\n      }\n    } else if (arr[i].type === 12) {\n      pop1 = stack.pop();\n\n      if (typeof pop1.type !== 'undefined') {\n        pop1 = [pop1];\n      }\n\n      pop2 = stack.pop();\n      pop3 = stack.pop();\n      stack.push({\n        type: 1,\n        value: arr[i].value(pop3.value, pop2.value, new Mexp(pop1))\n      });\n    } else if (arr[i].type === 13) {\n      if (bool) {\n        stack.push({\n          value: UserDefined[arr[i].value],\n          type: 3\n        });\n      } else stack.push([arr[i]]);\n    }\n  }\n\n  if (stack.length > 1) {\n    throw new Mexp.Exception('Uncaught Syntax error');\n  }\n\n  return stack[0].value > 1000000000000000 ? 'Infinity' : parseFloat(stack[0].value.toFixed(15));\n};\n\nMexp.eval = function (str, tokens, obj) {\n  if (typeof tokens === 'undefined') {\n    return this.lex(str).toPostfix().postfixEval();\n  } else if (typeof obj === 'undefined') {\n    if (typeof tokens.length !== 'undefined') return this.lex(str, tokens).toPostfix().postfixEval();else return this.lex(str).toPostfix().postfixEval(tokens);\n  } else return this.lex(str, tokens).toPostfix().postfixEval(obj);\n};\n\nmodule.exports = Mexp;","map":{"version":3,"sources":["/Users/romanpopov/Documents/GitHub/chartjs-example-react/node_modules/math-expression-evaluator/src/postfix_evaluator.js"],"names":["Mexp","require","prototype","postfixEval","UserDefined","PI","Math","E","stack","pop1","pop2","pop3","disp","temp","arr","value","bool","n","i","length","type","push","popped","x","numberOfArguments","pop","apply","reverse","concat","unshift","Exception","parseFloat","toFixed","eval","str","tokens","obj","lex","toPostfix","module","exports"],"mappings":"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","sourcesContent":["var Mexp = require('./postfix.js')\r\nMexp.prototype.postfixEval = function (UserDefined) {\r\n\t'use strict'\r\n\tUserDefined = UserDefined || {}\r\n\tUserDefined.PI = Math.PI\r\n\tUserDefined.E = Math.E\r\n\tvar stack = [],\r\n\t\tpop1,\r\n\t\tpop2,\r\n\t\tpop3\r\n\tvar disp = []\r\n\tvar temp = ''\r\n\tvar arr = this.value\r\n\tvar bool = typeof UserDefined.n !== 'undefined'\r\n\tfor (var i = 0; i < arr.length; i++) {\r\n\t\tif (arr[i].type === 1) {\r\n\t\t\tstack.push({ value: arr[i].value, type: 1 })\r\n\t\t} else if (arr[i].type === 3) {\r\n\t\t\tstack.push({ value: UserDefined[arr[i].value], type: 1 })\r\n\t\t} else if (arr[i].type === 0) {\r\n\t\t\tif (typeof stack[stack.length - 1].type === 'undefined') {\r\n\t\t\t\tstack[stack.length - 1].value.push(arr[i])\r\n\t\t\t} else stack[stack.length - 1].value = arr[i].value(stack[stack.length - 1].value)\r\n\t\t} else if (arr[i].type === 7) {\r\n\t\t\tif (typeof stack[stack.length - 1].type === 'undefined') {\r\n\t\t\t\tstack[stack.length - 1].value.push(arr[i])\r\n\t\t\t} else stack[stack.length - 1].value = arr[i].value(stack[stack.length - 1].value)\r\n\t\t} else if (arr[i].type === 8) {\r\n\t\t\tvar popped = []\r\n\t\t\tfor (var x = 0; x < arr[i].numberOfArguments; x++) {\r\n\t\t\t\tpopped.push(stack.pop().value)\r\n\t\t\t}\r\n\t\t\tstack.push({ type: 1, value: arr[i].value.apply(arr[i], popped.reverse()) })\r\n\t\t} else if (arr[i].type === 10) {\r\n\t\t\tpop1 = stack.pop()\r\n\t\t\tpop2 = stack.pop()\r\n\t\t\tif (typeof pop2.type === 'undefined') {\r\n\t\t\t\tpop2.value = pop2.concat(pop1)\r\n\t\t\t\tpop2.value.push(arr[i])\r\n\t\t\t\tstack.push(pop2)\r\n\t\t\t} else if (typeof pop1.type === 'undefined') {\r\n\t\t\t\tpop1.unshift(pop2)\r\n\t\t\t\tpop1.push(arr[i])\r\n\t\t\t\tstack.push(pop1)\r\n\t\t\t} else {\r\n\t\t\t\tstack.push({ type: 1, value: arr[i].value(pop2.value, pop1.value) })\r\n\t\t\t}\r\n\t\t} else if (arr[i].type === 2 || arr[i].type === 9) {\r\n\t\t\tpop1 = stack.pop()\r\n\t\t\tpop2 = stack.pop()\r\n\t\t\tif (typeof pop2.type === 'undefined') {\r\n\t\t\t\tpop2 = pop2.concat(pop1)\r\n\t\t\t\tpop2.push(arr[i])\r\n\t\t\t\tstack.push(pop2)\r\n\t\t\t} else if (typeof pop1.type === 'undefined') {\r\n\t\t\t\tpop1.unshift(pop2)\r\n\t\t\t\tpop1.push(arr[i])\r\n\t\t\t\tstack.push(pop1)\r\n\t\t\t} else {\r\n\t\t\t\tstack.push({ type: 1, value: arr[i].value(pop2.value, pop1.value) })\r\n\t\t\t}\r\n\t\t} else if (arr[i].type === 12) {\r\n\t\t\tpop1 = stack.pop()\r\n\t\t\tif (typeof pop1.type !== 'undefined') {\r\n\t\t\t\tpop1 = [pop1]\r\n\t\t\t}\r\n\t\t\tpop2 = stack.pop()\r\n\t\t\tpop3 = stack.pop()\r\n\t\t\tstack.push({ type: 1, value: arr[i].value(pop3.value, pop2.value, new Mexp(pop1)) })\r\n\t\t} else if (arr[i].type === 13) {\r\n\t\t\tif (bool) {\r\n\t\t\t\tstack.push({ value: UserDefined[arr[i].value], type: 3 })\r\n\t\t\t} else stack.push([arr[i]])\r\n\t\t}\r\n\t}\r\n\tif (stack.length > 1) {\r\n\t\tthrow new Mexp.Exception('Uncaught Syntax error')\r\n\t}\r\n\treturn stack[0].value > 1000000000000000 ? 'Infinity' : parseFloat(stack[0].value.toFixed(15))\r\n}\r\nMexp.eval = function (str, tokens, obj) {\r\n\tif (typeof tokens === 'undefined') {\r\n\t\treturn this.lex(str).toPostfix().postfixEval()\r\n\t} else if (typeof obj === 'undefined') {\r\n\t\tif (typeof tokens.length !== 'undefined') return this.lex(str, tokens).toPostfix().postfixEval()\r\n\t\telse return this.lex(str).toPostfix().postfixEval(tokens)\r\n\t} else return this.lex(str, tokens).toPostfix().postfixEval(obj)\r\n}\r\nmodule.exports = Mexp\r\n"]},"metadata":{},"sourceType":"script"}